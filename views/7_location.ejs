<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>New Locations</title>
  <link rel="stylesheet" href="/css/style.css"> 
</head>

<body>
    <main class="outermost-box">
        <header class="logo-and-menu">
            <img src="/images/Logo.png" alt="Hive Heading" class="hive-heading">
            <button class="image-button" aria-label="Menu"></button>
        </header>
        
        <!-- Set New Location Main Box -->
        <main class="set-new-location-main-box">
            <h1><%= locations[0].title %></h1>

            <p class="set-new-location-edit_location">
                Welcome to your location dashboard! This page gives an overview of the equipment in this location.
            </p>

            <section class="Set-New-Location">
                <!-- Set Equipment Content -->
                <div class="Set-New-Location1">
                    <h3>Equipment Chosen</h3>

                    <!-- Equipment Complete Table -->
                    <div class="equipment-container">

                        <!-- Equipment Search Bar -->
                        <div class="equipment-container-top-bar">
                            <input type="text" id="searchBar" class="equipment-container-search-bar" placeholder="Search Bar">
                            <select id="filterBar" class="equipment-container-filter-bar">
                                <option value="">Filter Bar</option>
                                <option value="all">All</option>
                                <option value="item-blue">Blue</option>
                                <option value="item-pink">Pink</option>
                                <option value="item-green">Green</option>
                            </select>
                        </div>
                        
                        <!-- Header of Equipment Table  -->
                        <div class="equipment-container-header">
                            <div class="equipment-container-column-Equipment">Equipment</div>
                            <div class="equipment-container-column-Description">Description</div>
                        </div>
                        
                        <!-- Table Content -->
                        <div id="tableRows">
                            <% equipments.forEach(equipment => { %>
                            <div class="unique-table-row" data-type="<%= equipment.type %>">
                                <div class="unique-equipment-column unique-equipment-name" data-equipment="<%= equipment.name %>"><%= equipment.name %></div>
                                <div class="unique-description-column">
                                <% equipment.descriptions.forEach(description => { %>
                                    <span class="unique-description-item unique-<%= description.className %>"><%= description.className %></span>
                                <% }); %>
                                </div>
                            </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            
                <!-- 2nd Column of Location Page -->
                <section class="Column2-Location">

                    <!-- Current Location Section -->
                    <section class="Set-New-Location-Sub-Step">
                        <h3>Current Location</h3>
                        <div class="Set-New-Location-Sub-Content">
                            <p><%= locations[0].location %></p>
                        </div>
                    </section> 

                    <!-- Button Section of 2nd Column -->
                    <section class="Location-Button-Section">
                        <h3>Controls</h3>
                        <div class="Set-New-Location-Setting-Btn">
                            <a href="/user/locations" class="location-btn">Locations</a>
                            <a href="/user/locations/new" class="location-btn">New Location</a>
                            <a href="/user/locations/location/edit" class="location-btn">Edit Location</a>
                        </div>
                    </section>
                </section>
            </section>
        </main>
    </main>
    
    <!-- JAVASCRIPT PORTIONS -->
    <script>
        // Open the Edit Equipment modal when an equipment name is clicked
        document.querySelectorAll(".unique-equipment-name").forEach(name => {
            name.onclick = function() {
                var equipment = name.getAttribute('data-equipment');
                var row = name.closest('.unique-table-row');
                var descriptions = Array.from(row.querySelectorAll('.unique-description-item')).map(item => item.classList[1].replace('unique-', ''));
                
                document.getElementById('editEquipmentName').value = equipment;
                document.querySelectorAll('input[name="editEquipmentType"]').forEach(checkbox => {
                    checkbox.checked = descriptions.includes(checkbox.value);
                });
                
                editModal.style.display = "block";
            }
        });

        // Filter equipment based on the selected type
        document.getElementById('filterBar').onchange = function() {
            var filterValue = this.value;
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                if (filterValue === "all" || Array.from(row.querySelectorAll('.unique-description-item')).some(item => item.classList.contains(`unique-${filterValue}`))) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        // Search bar functionality
        document.getElementById('searchBar').oninput = function() {
            var searchValue = this.value.toLowerCase();
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                var equipmentName = row.querySelector('.unique-equipment-name').textContent.toLowerCase();
                if (equipmentName.includes(searchValue)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            var equipmentsContainer = document.getElementById('equipmentsContainer');
            
            // Function to update button colors based on the toolkit
            function updateButtonStates() {
                document.querySelectorAll('.unique-add-button').forEach(button => {
                    var equipmentName = button.getAttribute('data-equipment');
                    var isInToolkit = Array.from(equipmentsContainer.children).some(item => item.textContent.includes(equipmentName));
                    
                    if (isInToolkit) {
                        button.classList.add('active');
                        button.style.backgroundColor = 'green';
                    } else {
                        button.classList.remove('active');
                        button.style.backgroundColor = 'orange';
                    }
                });
            }
        
            // Initialize button states based on current toolkit
            updateButtonStates();
        
            // Add event listener to table buttons
            document.querySelectorAll('.unique-add-button').forEach(button => {
                button.onclick = function() {
                    var equipmentName = button.getAttribute('data-equipment');
                    var existingItem = Array.from(equipmentsContainer.children).find(item => item.textContent.includes(equipmentName));
                    
                    if (button.classList.contains('active')) {
                        // Remove equipment from the Equipments section
                        if (existingItem) {
                            existingItem.remove();
                        }
                        // Remove active class from the button
                        button.classList.remove('active');
                        button.style.backgroundColor = 'orange';
                    } else {
                        // Add equipment to the Equipments section
                        var equipmentItem = document.createElement('div');
                        equipmentItem.className = 'tool-item';
                        equipmentItem.innerHTML = `${equipmentName} <button class="remove-tool-button" data-equipment="${equipmentName}">X</button>`;
                        equipmentsContainer.appendChild(equipmentItem);
        
                        // Add active class to the button
                        button.classList.add('active');
                        button.style.backgroundColor = 'green';
                    }
                };
            });
        
            // Add event listener to remove buttons in the toolkit
            equipmentsContainer.addEventListener('click', function(event) {
                if (event.target.classList.contains('remove-tool-button')) {
                    var equipmentName = event.target.getAttribute('data-equipment');
                    var row = Array.from(document.querySelectorAll('.unique-add-button')).find(button => button.getAttribute('data-equipment') === equipmentName);
                    
                    // Remove equipment from the Equipments section
                    if (row) {
                        row.classList.remove('active');
                        row.style.backgroundColor = 'orange';
                    }
        
                    // Remove equipment from the toolkit container
                    event.target.parentElement.remove();
                }
            });
        });
    </script>
</body>
</html>
