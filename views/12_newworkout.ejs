<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <title>New Workouts</title>
</head>
<body class="newworkout">
  <header>
      <div class="logo">
          <h1>HIVE</h1>
      </div>
      <nav>
          <div class="user-menu">
              <a href="/user/userprofile">
                  <img src="/images/avatar.png" alt="User Avatar" class="avatar">
              </a>
              <span>Menu</span>
          </div>
      </nav>
  </header>
  <div class="page-content">
    <div class="fixed-content">
        <h1>New Routine</h1>
        <input type="text" id="workoutName" placeholder="Workout Name" required>
            <input type="text" id="workoutLocation" placeholder="Workout Location" required>
        <div class="search-bar">
            <input type="text" class="search-input" placeholder="Search Workouts">
            <button class="personalized-workout">Personalized Workout</button>
        </div>
        <span>Filter</span>
                <select id="bodyPartFilter" class="filter-button">
                  <option value="">Body Part</option>
                  <option value="back">Back</option>
                  <option value="cardio">Cardio</option>
                  <option value="chest">Chest</option>
                  <option value="lower_arms">Lower Arms</option>
                  <option value="lower_legs">Lower Legs</option>
                  <option value="neck">Neck</option>
                  <option value="shoulders">Shoulders</option>
                  <option value="upper_arms">Upper Arms</option>
                  <option value="upper_legs">Upper Legs</option>
                  <option value="waist">Waist</option>
                </select>
              <select id="equipmentFilter" class="filter-button">
                <option value="">Equipment</option>
                <option value="assisted">Assisted</option>
                <option value="band">Band</option>
                <option value="barbell">Barbell</option>
                <option value="bodyweight">Body Weight</option>
                <option value="bosu_ball">Bosu Ball</option>
                <option value="cable">Cable</option>
                <option value="dumbbell">Dumbbell</option>
                <option value="elliptical_machine">Elliptical Machine</option>
                <option value="ez_barbell">EZ Barbell</option>
                <option value="hammer">Hammer</option>
                <option value="kettlebell">Kettlebell</option>
                <option value="leverage_machine">Leverage Machine</option>
                <option value="medicine_ball">Medicine Ball</option>
                <option value="olympic_barbell">Olympic Barbell</option>
                <option value="resistance_band">Resistance Band</option>
                <option value="roller">Roller</option>
                <option value="rope">Rope</option>
                <option value="skierg_machine">Skierg Machine</option>
                <option value="sled_machine">Sled Machine</option>
                <option value="smith_machine">Smith Machine</option>
                <option value="stability_ball">Stability Ball</option>
                <option value="stationary_bike">Stationary Bike</option>
                <option value="stepmill_machine">Stepmill Machine</option>
                <option value="tire">Tire</option>
                <option value="trap_bar">Trap Bar</option>
                <option value="upper_body_ergometer">Upper Body Ergometer</option>
                <option value="weighted">Weighted</option>
                <option value="wheel_roller">Wheel Roller</option>
              </select>
              <select id="targetFilter" class="filter-button">
                <option value="">Target Area</option>
                <option value="abductors">Abductors</option>
                <option value="abs">Abs</option>
                <option value="adductors">Adductors</option>
                <option value="biceps">Biceps</option>
                <option value="calves">Calves</option>
                <option value="cardiovascular_system">Cardiovascular System</option>
                <option value="delts">Delts</option>
                <option value="forearms">Forearms</option>
                <option value="glutes">Glutes</option>
                <option value="hamstrings">Hamstrings</option>
                <option value="lats">Lats</option>
                <option value="levator_scapulae">Levator Scapulae</option>
                <option value="pectorals">Pectorals</option>
                <option value="quads">Quads</option>
                <option value="serratus_anterior">Serratus Anterior</option>
                <option value="spine">Spine</option>
                <option value="traps">Traps</option>
                <option value="triceps">Triceps</option>
                <option value="upper_back">Upper Back</option>
              </select>
    </div>
    <div class="selected-exercises">
      <h2>Selected Exercises</h2>
      <ul id="selectedExercisesList"></ul>
      <button id="submitWorkout" class="submit-button">Create Workout</button>
    </div>
    <div class="scrollable-content">
      <div class="workout-list">
          <div class="workout-header">
              <div>Select</div>
              <div>Exercise</div>
              <div>Description</div>
              <div>Equipment</div>
              <div>Muscles</div>
          </div>
          <% if (exercises && exercises.data && exercises.data.length > 0) { %>
            <% exercises.data.forEach(function(exercise) { %>
                <div class="workout-row">
                    <div>
                        <input type="checkbox" class="select-exercise" data-exercise-id="<%= exercise.id %>">
                    </div>
                    <div class="exercise-name">
                        <a href="#" class="exercise-link" data-exercise-id="<%= exercise.id %>"><%= exercise.name %></a>
                    </div>
                    <div class="exercise-description">
                        <p class="short-description"><%= exercise.instructions[0] %>...</p>
                        <div class="full-instructions" style="display: none;">
                            <% exercise.instructions.forEach(function(instruction) { %>
                                <p><%= instruction %></p>
                            <% }); %>
                        </div>
                    </div>
                    <div><span class="equipment-tag"><%= exercise.equipment %></span></div>
                    <div class="target-muscles">
                        <%= exercise.target %>
                        <% if (exercise.secondaryMuscles && exercise.secondaryMuscles.length > 0) { %>
                            , <%= exercise.secondaryMuscles.join(', ') %>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="no-exercises">No exercises found.</div>
        <% } %>
      </div>
  </div>

  <!-- <a href="#" class="add-button">+</a> -->
  <script>
    // Pass the exercises data from the server to the client
    const exercises = <%- JSON.stringify(exercises.data) %>;
</script>
  <script src="/js/workout-filters.js"></script>
<script src="/js/exercise-details.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
      const exerciseContainer = document.getElementById('exerciseContainer');

      exercises.forEach(exercise => {
          const exerciseRow = document.createElement('div');
          exerciseRow.className = 'workout-row';
          exerciseRow.innerHTML = `
              <button class="add-exercise">+</button>
              <div class="exercise-name">
                  <a href="#" class="exercise-link" data-exercise-id="${exercise.id}">${exercise.name}</a>
              </div>
              <div class="exercise-description">
                  <p class="short-description">${exercise.instructions[0]}...</p>
                  <div class="full-instructions" style="display: none;">
                      ${exercise.instructions.map(instruction => `<p>${instruction}</p>`).join('')}
                  </div>
              </div>
              <div><span class="equipment-tag">${exercise.equipment}</span></div>
              <div>${exercise.target}, ${exercise.secondaryMuscles.join(', ')}</div>
          `;
          exerciseContainer.appendChild(exerciseRow);
      });
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const selectedExercises = new Set();
    const selectedExercisesList = document.getElementById('selectedExercisesList');
    const submitWorkoutButton = document.getElementById('submitWorkout');
    const workoutNameInput = document.getElementById('workoutName');
    const workoutLocationInput = document.getElementById('workoutLocation');

    // Ensure userId is passed from the server
    const userId = '<%= userId %>';

    if (selectedExercisesList) {
      document.querySelectorAll('.select-exercise').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          const exerciseId = this.dataset.exerciseId;
          const exerciseRow = this.closest('.workout-row');
          const exerciseName = exerciseRow.querySelector('.exercise-name').textContent.trim();
          const exerciseDescription = exerciseRow.querySelector('.exercise-description').textContent.trim();
          const exerciseEquipment = exerciseRow.querySelector('.equipment-tag').textContent.trim();
          const exerciseMuscles = exerciseRow.querySelector('div:last-child').textContent.trim();

          if (this.checked) {
            selectedExercises.add({
              id: exerciseId,
              name: exerciseName,
              description: exerciseDescription,
              equipment: exerciseEquipment,
              muscles: exerciseMuscles
            });
            const li = document.createElement('li');
            li.textContent = exerciseName;
            li.dataset.exerciseId = exerciseId;
            selectedExercisesList.appendChild(li);
          } else {
            selectedExercises.delete([...selectedExercises].find(e => e.id === exerciseId));
            const li = selectedExercisesList.querySelector(`li[data-exercise-id="${exerciseId}"]`);
            if (li) li.remove();
          }
        });
      });
    } else {
      console.error('selectedExercisesList element not found');
    }

    if (submitWorkoutButton) {
      submitWorkoutButton.addEventListener('click', function() {
        const workoutName = workoutNameInput.value.trim();
        const location = workoutLocationInput.value.trim();

        if (!workoutName || !location) {
          alert('Please enter a workout name and location');
          return;
        }

        const selectedExercisesArray = Array.from(selectedExercises).map(ex => ({
          id: ex.id,
          name: ex.name,
          description: ex.description,
          equipment: ex.equipment,
          muscles: ex.muscles
        }));

        fetch(`/${userId}/workouts/new`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            exercises: selectedExercisesArray,
            workoutName: workoutName,
            location: location,
          }),
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Redirecting to the given URL from the server response
              window.location.href = data.redirectUrl;
            } else {
              console.error('Error creating workout:', data.error);
            }
          })
          .catch(error => {
            console.error('Error:', error);
          });

      });
    } else {
      console.error('submitWorkoutButton element not found');
    }
  });
</script>
</body>
</html>