<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>New Locations</title>
  <link rel="stylesheet" href="/css/style.css"> 
</head>

<body>
    <main class="outermost-box">
        <header class="logo-and-menu">
            <img src="/images/Logo.png" alt="Hive Heading" class="hive-heading">
            <button class="image-button" aria-label="Menu"></button>
        </header>

        <!-- Set New Location Main Box -->
        <main class="set-new-location-main-box">
            <h1><%= locations[0].title %></h1>

            <p class="set-new-location-edit_location">
                Welcome to your location dashboard. If you want to 
                edit any components, make sure to press "commit changes."
            </p>

            <section class="Set-New-Location">
                <!-- Set Equipment Content -->
                <div class="Set-New-Location1">
                    <h3>Equipment Options</h3>

                    <!-- Equipment Complete Table -->
                    <div class="equipment-container">

                        <!-- Equipment Search Bar -->
                        <div class="equipment-container-top-bar">
                            <input type="text" id="searchBar" class="equipment-container-search-bar" placeholder="Search Bar">
                            <!--
                            <select id="filterBar" class="equipment-container-filter-bar">
                                <option value="">Filter Bar</option>
                                <option value="all">All</option>
                                <option value="item-blue">Blue</option>
                                <option value="item-pink">Pink</option>
                                <option value="item-green">Green</option>
                            </select>
                            -->
                            <button id="addItemButton" class="equipment-container-search-add" title="Add Item">+</button>
                        </div>
                        
                        <!-- Header of Equipment Table  -->
                        <div class="equipment-container-header">
                            <div class="equipment-container-column-Equipment">Equipment</div>
                            <!--<div class="equipment-container-column-Description">Description</div>--> 
                            <div class="equipment-container-column-Add">Add</div>
                        </div>
                        
                        <!-- Table Content -->
                        <div id="tableRows">
                            <% equipments.forEach(equipment => { %>
                            <div class="unique-table-row" data-type="<%= equipment.type %>">
                                <div class="unique-equipment-column unique-equipment-name" data-equipment="<%= equipment.name %>"><%= equipment.name %></div>

                                <!--
                                <div class="unique-description-column">
                                <% equipment.descriptions.forEach(description => { %>
                                    <span class="unique-description-item unique-<%= description.className %>"><%= description.className %></span>
                                <% }); %>
                                </div>
                                -->

                                <div class="unique-add-column">
                                <button class="unique-add-button" data-equipment="<%= equipment.name %>" title="Add to <%= equipment.name %>">+</button>
                                </div>
                            </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            

                <section class="Set-New-Location2">

                    <section class="Set-New-Location-Sub-Step">
                        <h3>Current Location</h3>
                        <div class="Set-New-Location-Sub-Content">
                            <input type="text" name="currentLocation" value="<%= locations[0].location %>" placeholder= "Enter Location"> <!-- Edit here once figure out ho to keep track of title-->
                        </div>
                    </section> 
                    
                    <section class="Set-New-Location-Sub-Step">
                        <h3>Current Toolkit</h3>
                        <div id="equipmentsContainer" class="Set-New-Location-Sub-Content">
                            <% locations[0].tools.forEach(tool => { %>
                                <div class="tool-item">
                                    <span class="tool-name"><%= tool.e_name %></span>
                                    <button class="remove-tool-button" data-equipment="<%= tool.e_name %>">X</button>
                                </div>
                            <% }) %>
                        </div>
                    </section>
                    
                    
                    <section class = "Set-New-Location-Sub-Step">
                        <h3>Title</h3>
                        <div class="Set-New-Location-Sub-Content">
                            <input type="text" name="currentLocation" value="<%= locations[0].title %>" placeholder= "Enter Location">
                        </div>
                    </section>
                    
                    <button id="submit-location-equipment" class="btn">Commit Changes</button>
                </section>
            </section>
        </main>
    </main>

    <!-- Modal for Adding Equipment -->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Add New Equipment</h2>
            <form id="addEquipmentForm">
                <label for="equipmentName">Equipment Name:</label><br>
                <input type="text" id="equipmentName" name="equipmentName" required><br><br>
                
                <label for="equipmentType">Equipment Type:</label><br>
                <label><input type="checkbox" name="equipmentType" value="item-blue"> Blue</label><br>
                <label><input type="checkbox" name="equipmentType" value="item-pink"> Pink</label><br>
                <label><input type="checkbox" name="equipmentType" value="item-green"> Green</label><br>
                <!-- Add more checkboxes as needed -->
                
                <br><br>
                <button type="submit">Edit</button>
            </form>
        </div>
    </div>

    <!-- Modal for Editing Equipment -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Edit Equipment</h2>
            <form id="editEquipmentForm">
                <label for="editEquipmentName">Equipment Name:</label><br>
                <input type="text" id="editEquipmentName" name="editEquipmentName" required><br><br>
                
                <label for="editEquipmentType">Equipment Type:</label><br>
                <label><input type="checkbox" name="editEquipmentType" value="item-blue"> Blue</label><br>
                <label><input type="checkbox" name="editEquipmentType" value="item-pink"> Pink</label><br>
                <label><input type="checkbox" name="editEquipmentType" value="item-green"> Green</label><br>
                <!-- Add more checkboxes as needed -->
                
                <br><br>
                <button type="submit">Save Changes</button>
                <button type="button" id="removeButton">Remove</button>
            </form>
        </div>
    </div>


    <!-- JAVASCRIPT PORTIONS -->
    <script>
        // locations array - 
        // Get the modals
        var addModal = document.getElementById("myModal");
        var editModal = document.getElementById("editModal");

        // Get the buttons that open the modals
        var addItemButton = document.getElementById("addItemButton");

        // Get the <span> elements that close the modals
        var spans = document.querySelectorAll(".close");

        // Open the Add Equipment modal
        addItemButton.onclick = function() {
            addModal.style.display = "block";
        }

        // Open the Edit Equipment modal when an equipment name is clicked
        document.querySelectorAll(".unique-equipment-name").forEach(name => {
            name.onclick = function() {
                var equipment = name.getAttribute('data-equipment');
                var row = name.closest('.unique-table-row');
                var descriptions = Array.from(row.querySelectorAll('.unique-description-item')).map(item => item.classList[1].replace('unique-', ''));
                
                document.getElementById('editEquipmentName').value = equipment;
                document.querySelectorAll('input[name="editEquipmentType"]').forEach(checkbox => {
                    checkbox.checked = descriptions.includes(checkbox.value);
                });
                
                editModal.style.display = "block";
            }
        });

                // Add event listener to the buttons inside the table rows
        document.querySelectorAll('.unique-table-row').forEach(row => {
            var button = row.querySelector('.unique-add-button');
            button.onclick = function() {
                var equipmentName = button.getAttribute('data-equipment');
                var equipmentsContainer = document.getElementById('equipmentsContainer');
                var existingItem = Array.from(equipmentsContainer.children).find(item => item.textContent === equipmentName);
                
                if (button.classList.contains('active')) {
                    // Remove equipment from the Equipments section
                    if (existingItem) {
                        existingItem.remove();
                    }
                    // Remove active class from the button
                    button.classList.remove('active');
                } else {
                    // Add equipment to the Equipments section
                    var equipmentItem = document.createElement('div');
                    equipmentItem.className = 'added-equipment-item';
                    equipmentItem.textContent = equipmentName;
                    equipmentsContainer.appendChild(equipmentItem);
                    
                    // Add active class to the button
                    button.classList.add('active');
                }
            }
        });

        // Close the modals when clicking on <span> (x)
        spans.forEach(span => {
            span.onclick = function() {
                addModal.style.display = "none";
                editModal.style.display = "none";
            }
        });

        // Close the modals when clicking outside of them
        window.onclick = function(event) {
            if (event.target == addModal) {
                addModal.style.display = "none";
            } else if (event.target == editModal) {
                editModal.style.display = "none";
            }
        }

        // Handle Add Equipment form submission
        document.getElementById('addEquipmentForm').onsubmit = function(event) {
            event.preventDefault();
            var name = document.getElementById('equipmentName').value;
            var types = Array.from(document.querySelectorAll('input[name="equipmentType"]:checked')).map(checkbox => checkbox.value);
        
            var newRow = document.createElement('div');
            newRow.className = 'unique-table-row';
            newRow.setAttribute('data-type', types.join(" "));
            newRow.innerHTML = `
                <div class="unique-equipment-column unique-equipment-name" data-equipment="${name}">${name}</div>
                <div class="unique-description-column">
                    ${types.map(type => `<span class="unique-description-item unique-${type}">${type}</span>`).join("")}
                </div>
                <div class="unique-add-column">
                    <button class="unique-add-button" data-equipment="${name}" title="Add to ${name}">+</button>
                </div>
            `;
            document.getElementById('tableRows').appendChild(newRow);

            // Event listener on the parent container (#tableRows)
            document.getElementById('tableRows').addEventListener('click', function(event) {
                // Check if the clicked element is the equipment name
                if (event.target.classList.contains('unique-equipment-name')) {
                var equipment = event.target.getAttribute('data-equipment');
                var row = event.target.closest('.unique-table-row');
                var descriptions = Array.from(row.querySelectorAll('.unique-description-item')).map(item => item.classList[1].replace('unique-', ''));
                
                document.getElementById('editEquipmentName').value = equipment;
                document.querySelectorAll('input[name="editEquipmentType"]').forEach(checkbox => {
                    checkbox.checked = descriptions.includes(checkbox.value);
                });
                
                editModal.style.display = "block";
                }
            });
        
            // Add the event listener for the new button
            newRow.querySelector('.unique-add-button').onclick = function() {
                var equipmentName = this.getAttribute('data-equipment');
                var equipmentsContainer = document.getElementById('equipmentsContainer');
                var existingItem = Array.from(equipmentsContainer.children).find(item => item.textContent === equipmentName);
        
                if (this.classList.contains('active')) {
                    // Remove equipment from the Equipments section
                    if (existingItem) {
                        existingItem.remove();
                    }
                    // Remove active class from the button
                    this.classList.remove('active');
                } else {
                    // Add equipment to the Equipments section
                    var equipmentItem = document.createElement('div');
                    equipmentItem.className = 'added-equipment-item';
                    equipmentItem.textContent = equipmentName;
                    equipmentsContainer.appendChild(equipmentItem);
        
                    // Add active class to the button
                    this.classList.add('active');
                }
            };
        
            // Close the modal after submission
            addModal.style.display = "none";
        };
        
        // Handle Edit Equipment form submission
        document.getElementById('editEquipmentForm').onsubmit = function(event) {
            event.preventDefault();
            var originalName = document.getElementById('editEquipmentName').value;
            var types = Array.from(document.querySelectorAll('input[name="editEquipmentType"]:checked')).map(checkbox => checkbox.value);

            // Find the equipment row and update it
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                var equipmentNameElem = row.querySelector('.unique-equipment-name');
                if (equipmentNameElem.getAttribute('data-equipment') === originalName) {
                    row.setAttribute('data-type', types.join(" "));
                    equipmentNameElem.innerHTML = originalName;
                    row.querySelector('.unique-description-column').innerHTML = `
                        ${types.map(type => `<span class="unique-description-item unique-${type}">${type}</span>`).join("")}
                    `;
                }
            });

            // Update the Equipments section
            var equipmentsContainer = document.getElementById('equipmentsContainer');
            Array.from(equipmentsContainer.children).forEach(item => {
                if (item.textContent === originalName) {
                    item.textContent = originalName;
                }
            });

            // Close the modal after submission
            editModal.style.display = "none";
        }

        // Handle Remove button click
        document.getElementById('removeButton').onclick = function() {
            var equipmentName = document.getElementById('editEquipmentName').value;

            // Remove the row that matches the equipment name
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                var equipmentNameElem = row.querySelector('.unique-equipment-name');
                if (equipmentNameElem.getAttribute('data-equipment') === equipmentName) {
                    row.remove();
                }
            });

            // Remove the equipment from the Equipments section
            var equipmentsContainer = document.getElementById('equipmentsContainer');
            Array.from(equipmentsContainer.children).forEach(item => {
                if (item.textContent === equipmentName) {
                    item.remove();
                }
            });

            // Close the modal after removal
            editModal.style.display = "none";
        }

        // Filter equipment based on the selected type
        document.getElementById('filterBar').onchange = function() {
            var filterValue = this.value;
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                if (filterValue === "all" || Array.from(row.querySelectorAll('.unique-description-item')).some(item => item.classList.contains(`unique-${filterValue}`))) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        // Search bar functionality
        document.getElementById('searchBar').oninput = function() {
            var searchValue = this.value.toLowerCase();
            var rows = document.querySelectorAll('.unique-table-row');
            rows.forEach(row => {
                var equipmentName = row.querySelector('.unique-equipment-name').textContent.toLowerCase();
                if (equipmentName.includes(searchValue)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            var equipmentsContainer = document.getElementById('equipmentsContainer');
            
            // Function to update button colors based on the toolkit
            function updateButtonStates() {
                document.querySelectorAll('.unique-add-button').forEach(button => {
                    var equipmentName = button.getAttribute('data-equipment');
                    var isInToolkit = Array.from(equipmentsContainer.children).some(item => item.textContent.includes(equipmentName));
                    
                    if (isInToolkit) {
                        button.classList.add('active');
                        button.style.backgroundColor = 'green';
                    } else {
                        button.classList.remove('active');
                        button.style.backgroundColor = 'orange';
                    }
                });
            }
        
            // Initialize button states based on current toolkit
            updateButtonStates();
        
            // Add event listener to table buttons
            document.querySelectorAll('.unique-add-button').forEach(button => {
                button.onclick = function() {
                    var equipmentName = button.getAttribute('data-equipment');
                    var existingItem = Array.from(equipmentsContainer.children).find(item => item.textContent.includes(equipmentName));
                    
                    if (button.classList.contains('active')) {
                        // Remove equipment from the Equipments section
                        if (existingItem) {
                            existingItem.remove();
                        }
                        // Remove active class from the button
                        button.classList.remove('active');
                        button.style.backgroundColor = 'orange';
                    } else {
                        // Add equipment to the Equipments section
                        var equipmentItem = document.createElement('div');
                        equipmentItem.className = 'tool-item';
                        equipmentItem.innerHTML = `${equipmentName} <button class="remove-tool-button" data-equipment="${equipmentName}">X</button>`;
                        equipmentsContainer.appendChild(equipmentItem);
        
                        // Add active class to the button
                        button.classList.add('active');
                        button.style.backgroundColor = 'green';
                    }
                };
            });
        
            // Add event listener to remove buttons in the toolkit
            equipmentsContainer.addEventListener('click', function(event) {
                if (event.target.classList.contains('remove-tool-button')) {
                    var equipmentName = event.target.getAttribute('data-equipment');
                    var row = Array.from(document.querySelectorAll('.unique-add-button')).find(button => button.getAttribute('data-equipment') === equipmentName);
                    
                    // Remove equipment from the Equipments section
                    if (row) {
                        row.classList.remove('active');
                        row.style.backgroundColor = 'orange';
                    }
        
                    // Remove equipment from the toolkit container
                    event.target.parentElement.remove();
                }
            });
        });
        

        /*
        document.getElementById('submit-location-equipment').onclick = function() {
            // Get the title from the input field
            var title = document.querySelector('.Set-New-Location-Sub-Step input[placeholder="Enter name"]').value;
            
            // Get the location from the input field
            var location = document.querySelector('.Set-New-Location-Sub-Step input[placeholder="Enter your current location"]').value;
            
            // Get the equipment from the "Current Toolkit"
            var tools = Array.from(document.getElementById('equipmentsContainer').children).map(item => {
                return { e_name: item.textContent };
            });
        
            // Create the new location object
            var newLocation = {
                title: title,
                location: location,
                tools: tools
            };
        
            // Add this to the locations array
            locations.push(newLocation);
            
            // Optional: Clear the inputs after submission
            document.querySelector('.Set-New-Location-Sub-Step input[placeholder="Enter name"]').value = '';
            document.querySelector('.Set-New-Location-Sub-Step input[placeholder="Enter your current location"]').value = '';
            document.getElementById('equipmentsContainer').innerHTML = ''; // Clear the current toolkit
        
            console.log(locations); // For testing purposes, log the locations array to the console
        };
        */
        
    </script>
</body>
</html>
